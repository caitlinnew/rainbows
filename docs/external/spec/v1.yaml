openapi: 3.1.0
info:
  version: 1.0.0
  title: Ankorstore Public API v1
  description: Ankorstore Public API documentation
  contact:
    name: Ankorstore Support
    email: api@ankorstore.com
    url: 'https://www.ankorstore.com'
  license:
    name: CC0 1.0 Universal
    url: 'https://creativecommons.org/publicdomain/zero/1.0/'
externalDocs:
  description: 'Read more about JSON:API here'
  url: 'https://jsonapi.org/'
servers:
  - url: 'https://www.public.sandbox.ankorstore.com'
    description: Staging Environment
  - url: 'https://www.ankorstore.com'
    description: Production Environment
tags:
  - name: Currency
  - name: Navigation
  - name: Order
  - name: Product
  - name: Shipping
  - name: Stock Management
  - name: Testing
  - name: User
paths:
  '/api/v1/orders':
    get:
      summary: List Orders
      $ref: './v1/orders/index.yaml#/get'
      tags:
        - Order
  '/api/v1/orders/{order}':
    get:
      summary: Get Order
      $ref: './v1/orders/item.yaml#/get'
      tags:
        - Order
  '/api/v1/currencies/rates/latest':
    get:
      summary: List latest currency rates
      $ref: './v1/currencies/rates/latest.yaml#/get'
      tags:
        - Currency
  '/api/v1/me/config':
    get:
      summary: Configuration for the current user
      $ref: './v1/me/config.yaml#/get'
      tags:
        - Order
  '/api/v1/orders/{order}/-actions/transition':
    post:
      summary: Transition an order
      $ref: './v1/orders/item-action-transition.yaml#/post'
      tags:
        - Order
  '/api/v1/orders/{order}/ship/custom':
    post:
      summary: Ship Order With Custom
      $ref: './v1/orders/item-ship-custom.yaml#/post'
      tags:
        - Shipping
  '/api/v1/orders/{order}/shipping-quotes':
    post:
      summary: List Shipping Quotes
      $ref: './v1/orders/item-list-shipping-quotes.yaml#/post'
      tags:
        - Shipping
  '/api/v1/orders/{order}/ship/ankorstore':
    post:
      summary: '[Deprecated] Ship Order with Ankorstore'
      description: This endpoint is deprecated. We encourage you to use the List Order Quotes endpoint instead.
      $ref: './v1/orders/item-ship-ankorstore.yaml#/post'
      deprecated: true
      tags:
        - Shipping
  '/api/v1/shipping-quotes/{quoteId}/confirm':
    post:
      summary: Confirm Shipping Quote
      $ref: './v1/orders/item-confirm-shipping-quote.yaml#/post'
      tags:
        - Shipping
  '/api/v1/orders/{order}/ship/confirm':
    post:
      summary: '[Deprecated] Confirm Order Shipping'
      $ref: './v1/orders/item-ship-confirm.yaml#/post'
      tags:
        - Shipping
  '/api/v1/orders/{order}/ship/schedule-pickup':
    post:
      summary: Schedule Pickup for order
      $ref: './v1/orders/item-ship-schedule-pickup.yaml#/post'
      tags:
        - Shipping
  '/api/v1/orders/{order}/accept':
    post:
      summary: '[Deprecated] Accept Order'
      $ref: './v1/orders/item-accept.yaml#/post'
      tags:
        - Order
  '/api/v1/orders/{order}/reject':
    post:
      summary: '[Deprecated] Reject Order'
      $ref: './v1/orders/item-reject.yaml#/post'
      tags:
        - Order
  '/api/v1/products':
    get:
      summary: List Products
      $ref: './v1/products/index.yaml#/get'
      tags:
        - Product
  '/api/v1/products/{product}':
    get:
      summary: Get Product
      $ref: './v1/products/item.yaml#/get'
      tags:
        - Product
  '/api/v1/product-variants':
    get:
      summary: List Product Variants with their stock
      $ref: './v1/product-variants/index.yaml#/get'
      tags:
        - Product
  '/api/v1/product-variants/{productVariant}':
    get:
      summary: Get product variant with stock
      $ref: './v1/product-variants/item.yaml#/get'
      tags:
        - Product
  '/api/v1/product-variants/{productVariant}/stock':
    patch:
      summary: Update product variant stock
      $ref: './v1/product-variants/item-stock.yaml#/patch'
      tags:
        - Stock Management
  '/api/v1/operations':
    post:
      summary: Bulk Operations
      $ref: './v1/operations/index.yaml#/post'
      tags:
        - Stock Management
  '/api/testing/orders/create':
    post:
      summary: Create Test Order (Sandbox Only)
      $ref: './v1/testing/orders/create.yaml#/post'
      tags:
        - Testing
  '/api/v1/storefront/nav/{code}/items':
    get:
      $ref: './v1/storefront/nav/items.yaml#/get'
      tags:
        - Navigation
      description: Returns the list of items in the navigation menu.
      operationId: get-nav-menu-items
  '/api/v1/users/{id}/config':
    get:
      summary: Configuration for the current user
      $ref: './v1/users/config.yaml#/get'
      tags:
        - User

components:
  schemas:
    failure:
      type: object
      additionalProperties: false
      properties:
        errors:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/error'
        jsonapi:
          $ref: '#/components/schemas/jsonapi'
      required:
        - errors
    meta:
      description: Non-standard meta-information that can not be represented as an attribute or relationship.
      type: object
      additionalProperties: true
    relationshipToOne:
      description: References to other resource objects in a to-one (`relationship`). Relationships can be specified by including a member in a resource's links object.
      $ref: '#/components/schemas/linkage'
    relationshipToMany:
      description: An array of objects each containing `type` and `id` members for to-many relationships.
      type: array
      items:
        $ref: '#/components/schemas/linkage'
      uniqueItems: true
    linkage:
      description: Resource identification present in Resource Objects and Resource Identifier Objects.
      type: object
      required:
        - id
        - type
      properties:
        id:
          $ref: '#/components/schemas/id'
        type:
          $ref: '#/components/schemas/type'
        meta:
          $ref: '#/components/schemas/meta'
      additionalProperties: false
    jsonapi:
      description: An object describing the server's implementation
      type: object
      properties:
        version:
          type: string
        meta:
          $ref: '#/components/schemas/meta'
      additionalProperties: false
    error:
      type: object
      properties:
        code:
          description: 'An application-specific error code, expressed as a string value.'
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
        status:
          description: 'The HTTP status code applicable to this problem, expressed as a string value.'
          type: string
        title:
          description: The HTTP status code description applicable to this problem
          type: string
        source:
          type: object
          description: Optional object pointing towards the problematic field
          properties:
            pointer:
              type: string
              description: The field key
      additionalProperties: false
    id:
      type: string
      description: '[resource object identifier (uuid)](https://jsonapi.org/format/#document-resource-object-identification)'
      format: uuid
    type:
      type: string
      description: '[resource object type](https://jsonapi.org/format/#document-resource-object-identification)'
    money:
      type: integer
      description: Lowest denomination of the currency this amount belongs to.
    massUnit:
      type: string
      description: The unit of mass
      enum:
        - g
    distanceUnit:
      type: string
      description: The unit of distance
      enum:
        - cm
    paginationMeta:
      type: object
      description: Meta with Pagination Details
      required:
        - page
      additionalProperties: true
      properties:
        page:
          description: Cursor pagination details
          type: object
          properties:
            from:
              type:
                - string
                - 'null'
            to:
              type:
                - string
                - 'null'
            hasMore:
              type: boolean
            perPage:
              type: integer
          required:
            - from
            - to
            - hasMore
            - perPage
    paginationLinks:
      description: Pagination navigation links. If a link does not exist then you cannot paginate any further in that direction.
      type: object
      properties:
        first:
          type: string
          format: url
        next:
          type: string
          format: url
        prev:
          type: string
          format: url
  parameters:
    acceptInHeader:
      name: Accept
      in: header
      description: application/vnd.api+json
      schema:
        type: string
        default: application/vnd.api+json
    pageLimit:
      name: 'page[limit]'
      in: query
      description: limit the amount of results returned
      required: false
      schema:
        type: integer
        format: int64
    pageBefore:
      name: 'page[before]'
      in: query
      description: show items before the provided ID (uuid format)
      required: false
      schema:
        type: string
    pageAfter:
      name: 'page[after]'
      in: query
      description: show items after the provided ID (uuid format)
      required: false
      schema:
        type: string
  securitySchemes:
    ProductionOAuth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://www.ankorstore.com/oauth/token'
          refreshUrl: 'https://www.ankorstore.com/oauth/token'
          scopes: {}
    TestOauth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://www.public.sandbox.ankorstore.com/oauth/token'
          refreshUrl: 'https://www.public.sandbox.ankorstore.com/oauth/token'
          scopes: {}
  responses:
    BadRequest:
      description: Bad request
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/failure'
          example:
            jsonapi:
              version: '1.0'
            errors:
              - detail: Bad request
                status: '400'
    Unauthorized:
      description: Unauthorized
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/failure'
          example:
            jsonapi:
              version: '1.0'
            errors:
              - detail: Unauthorized
                status: '401'
    Forbidden:
      description: '[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)'
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/failure'
          example:
            jsonapi:
              version: '1.0'
            errors:
              - detail: Forbidden
                status: '403'
    NotFound:
      description: '[Not found](https://jsonapi.org/format/#fetching-resources-responses-404)'
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/failure'
          example:
            jsonapi:
              version: '1.0'
            errors:
              - detail: Not found
                status: '404'
    UnprocessableEntity:
      description: 'Unprocessable Entity : Data provided are invalid'
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/failure'
          example:
            jsonapi:
              version: string
            errors:
              - detail: The field is required.
                source:
                  pointer: data.attributes.field
                status: '422'
                title: Unprocessable Content
    ServerError:
      description: '[Server Error](https://jsonapi.org/format/#errors)'
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/failure'
          example:
            jsonapi:
              version: '1.0'
            errors:
              - detail: Server Error
                status: '500'
    TooManyRequests:
      description: '[Too Many Requests](https://jsonapi.org/format/#errors)'
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/failure'
          example:
            jsonapi:
              version: '1.0'
            errors:
              - detail: Too Many Requests
                status: '429'
    Conflict:
      description: Conflict
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/failure'
          example:
            jsonapi:
              version: '1.0'
            errors:
              - detail: Conflict
                status: '409'
    NotAcceptable:
      description: Not Acceptable
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/failure'
          example:
            jsonapi:
              version: '1.0'
            errors:
              - detail: Not Acceptable
                status: '406'
    UnsupportedMediaType:
      description: Unsupported Media Type
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/failure'
          example:
            jsonapi:
              version: '1.0'
            errors:
              - detail: Unsupported Media Type
                status: '415'
security:
  - ProductionOAuth2ClientCredentials: []
