schemas:
  FulfillmentOrderResource:
    properties:
      type:
        $ref: '../internal.yaml#/components/schemas/type'
      id:
        $ref: '../internal.yaml#/components/schemas/id'
      attributes:
        $ref: '#/schemas/FulfillmentOrder'
      links:
        type: object
        properties:
          order:
            type: string
      relationships:
        type: object
        properties:
          statusUpdates:
            type: object
            properties:
              data:
                $ref: '../internal.yaml#/components/schemas/relationshipToMany'
          shipments:
            type: object
            properties:
              data:
                $ref: '../internal.yaml#/components/schemas/relationshipToMany'
    required:
      - type
      - id
      - attributes
  ReplenishmentResource:
    properties:
      type:
        $ref: '../internal.yaml#/components/schemas/type'
      id:
        $ref: '../internal.yaml#/components/schemas/id'
      attributes:
        $ref: '#/schemas/Replenishment'
      relationships:
        type: object
        properties:
          fulfillmentBrand:
            type: object
            properties:
              data:
                $ref: '../internal.yaml#/components/schemas/relationshipToOne'
          warehouse:
            type: object
            properties:
              data:
                $ref: '../internal.yaml#/components/schemas/relationshipToOne'
    required:
      - type
      - id
      - attributes
  BillingCategory:
    type: string
    enum:
      - S
      - M
      - L
  ParcelCarrier:
    type: string
    enum:
      - DPD_CLA
      - DPD_PRE
  PalletCarrier:
    type: string
    enum:
      - KNC01_C
      - KNC02_C
      - DE_MES
      - DE_MEI
  FulfillmentBrandStoreRequest:
    type: object
    properties:
      brandId:
        description: 'Ankorstore brand ID'
        type: integer
      brandName:
        type: string
      warehouseId:
        type: string
        format: uuid
      billingCategory:
        $ref: '#/schemas/BillingCategory'
      parcelCarrier:
        $ref: '#/schemas/ParcelCarrier'
      palletCarrier:
        $ref: '#/schemas/PalletCarrier'
      maxParcelShipmentWeight:
        type:
          - integer
          - 'null'
    required:
      - brandId
      - brandName
  FulfillmentBrand:
    type: object
    properties:
      brandId:
        description: 'Ankorstore brand ID'
        type: integer
      warehouseId:
        type: string
        format: uuid
      billingCategory:
        $ref: '#/schemas/BillingCategory'
      reference:
        type: string
      parcelCarrier:
        $ref: '#/schemas/ParcelCarrier'
      palletCarrier:
        $ref: '#/schemas/PalletCarrier'
      maxParcelShipmentWeight:
        type:
          - integer
          - 'null'
    required:
      - brandId
      - warehouseId
      - billingCategory
      - reference
  FulfillmentBrandResource:
    properties:
      type:
        $ref: '../internal.yaml#/components/schemas/type'
      id:
        $ref: '../internal.yaml#/components/schemas/id'
      attributes:
        $ref: '#/schemas/FulfillmentBrand'
      relationships:
        type: object
        properties:
          warehouse:
            type: object
            properties:
              data:
                $ref: '../internal.yaml#/components/schemas/relationshipToOne'
    required:
      - type
      - id
      - attributes
  FulfillmentOrderStatus:
    type: string
    enum:
      - internal
      - requested
      - created
      - scheduled
      - released
      - shipped
      - cancelled
    readOnly: true
  FulfillmentOrder:
    type: object
    properties:
      reference:
        type: string
      orderId:
        description: 'Ankorstore order ID, or null for direct fulfillment order. Please use orderUuid instead'
        deprecated: true
        type:
          - integer
          - 'null'
      orderUuid:
        type:
          - string
          - 'null'
        format: uuid
      fulfillmentBrandId:
        type: string
        format: uuid
      isDirect:
        type: boolean
        readOnly: true
      shippingCharged:
        description: 'Is shipping fee charged for order, default to true'
        type: boolean
      status:
        $ref: '#/schemas/FulfillmentOrderStatus'
      createdAt:
        type: string
        format: date-time
        readOnly: true
      shippingAddress:
        description: Shipping address for the recipient. Required for order creation
        $ref: '#/schemas/FulfillmentOrderShippingAddress'
      billingAddress:
        description: Optional billing address for the recipient
        anyOf:
          - $ref: '#/schemas/FulfillmentOrderAddress'
          - type: 'null'
      items:
        type: array
        items:
          $ref: '#/schemas/FulfillmentOrderItem'
    required:
      - shippingAddress
      - items
  FulfillmentOrderRequest:
    type: object
    properties:
      reference:
        type: string
      orderId:
        description: 'Ankorstore order ID, or null for direct fulfillment order'
        type:
          - integer
          - 'null'
      orderUuid:
        description: 'Ankorstore order uuid, or null for direct fulfillment order'
        format: uuid
        type:
          - string
          - 'null'
      masterOrderUuid:
        description: 'Ankorstore master order uuid, or null if not set'
        format: uuid
        type:
          - string
          - 'null'
      fulfillmentBrandId:
        type: string
        format: uuid
      shippingCharged:
        description: 'Is shipping fee charged for order, default to true'
        type:
          - boolean
      shippingAddress:
        description: Shipping address for the recipient. Required for order creation
        $ref: '#/schemas/FulfillmentOrderShippingAddress'
      billingAddress:
        description: Optional billing address for the recipient
        anyOf:
          - $ref: '#/schemas/FulfillmentOrderAddress'
          - type: 'null'
      items:
        type: array
        items:
          anyOf:
            - $ref: '#/schemas/FulfillableBatchesSpecification'
            - $ref: '#/schemas/FulfillableUnitsSpecification'
    required:
      - shippingAddress
      - items
  FulfillmentOrderItem:
    type: object
    properties:
      fulfillmentItemId:
        type: string
        format: uuid
      quantity:
        type: integer
        description: quantity in batches
    required:
      - fulfillmentItemId
      - quantity
  FulfillableBatchesSpecification:
    type: object
    properties:
      fulfillableId:
        type: string
        format: uuid
      quantity:
        type: integer
        description: quantity in batches
    required:
      - fulfillableId
      - quantity
  FulfillableUnitsSpecification:
    type: object
    properties:
      fulfillableId:
        type: string
        format: uuid
      unitQuantity:
        type: integer
        description: quantity in units
    required:
      - fulfillableId
      - unitQuantity
  FulfillmentOrderAddress:
    type: object
    properties:
      firstName:
        type: string
        minLength: 1
      lastName:
        type: string
        minLength: 1
      company:
        type: string
      phone:
        type: string
        minLength: 1
      email:
        type: string
      street:
        type: string
        minLength: 1
      city:
        type: string
        minLength: 1
      postalCode:
        type: string
      country:
        type: string
        pattern: '^[A-Z]{2}$'
  FulfillmentOrderShippingAddress:
    allOf:
      - $ref: '#/schemas/FulfillmentOrderAddress'
      - required:
        - firstName
        - lastName
        - company
        - phone
        - email
        - street
        - city
        - postalCode
        - country
  FulfillmentShipmentResource:
    properties:
      type:
        $ref: '../internal.yaml#/components/schemas/type'
      id:
        $ref: '../internal.yaml#/components/schemas/id'
      attributes:
        $ref: '#/schemas/FulfillmentShipment'
  FulfillmentOrderStatusUpdateResource:
    properties:
      type:
        $ref: '../internal.yaml#/components/schemas/type'
      id:
        $ref: '../internal.yaml#/components/schemas/id'
      attributes:
        $ref: '#/schemas/FulfillmentOrderStatusUpdate'
  FulfillmentShipment:
    description: Shipment tracking info. Will be null until this information is available
    type: object
    properties:
      trackingNumber:
        type: string
        readOnly: true
      trackingLink:
        type:
          - string
          - 'null'
        readOnly: true
      provider:
        description: 'Shipping provider identifier'
        type: string
        readOnly: true
      providerName:
        description: 'Shipping provider display name'
        type: string
        readOnly: true
      width:
        description: 'Parcel or pallet width (in MM)'
        type: integer
        readOnly: true
      length:
        description: 'Parcel or pallet length (in MM)'
        type: integer
        readOnly: true
      height:
        description: 'Parcel or pallet height (in MM)'
        type: integer
        readOnly: true
      weight:
        description: 'Parcel or pallet weight (in GR)'
        type: integer
        readOnly: true
      createdAt:
        type: string
        format: date-time
        readOnly: true
  FulfillmentOrderStatusUpdate:
    description: 'Fulfillment order status update'
    type: object
    properties:
      status:
        $ref: '#/schemas/FulfillmentOrderStatus'
      receivedAt:
        type: string
        format: date-time
        readOnly: true
  ReplenishmentBase:
    title: Replenishment
    type: object
    properties:
      brandId:
        type: integer
      warehouseId:
        type: string
        format: uuid
      shippingCarrierName:
        type: string
      shipmentType:
        type: string
        enum:
          - LTL
          - FTL
          - PARCEL
      items:
        type: array
        items:
          $ref: '#/schemas/ReplenishmentItem'
    required:
      - warehouseId
      - shippingCarrierName
      - shipmentType
      - items
  Replenishment:
    type: object
    allOf:
      - $ref: '#/schemas/ReplenishmentBase'
      - type: object
        properties:
          reference:
            type: string
          status:
            type: string
            enum:
              - created
              - sent
              - received
          receivedAt:
            type:
              - string
              - 'null'
            format: date-time
          submittedAt:
            type:
              - string
              - 'null'
            format: date-time
          receipts:
            type: array
            items:
              $ref: '#/schemas/ReplenishmentReceipt'
  ReplenishmentInput:
    type: object
    allOf:
      - $ref: '#/schemas/ReplenishmentBase'
      - type: object
        properties:
          id:
            type: string
            format: uuid
  ReplenishmentItem:
    title: ReplenishmentItem
    type: object
    properties:
      fulfillmentItemId:
        type: string
        format: uuid
      quantity:
        type: integer
      status:
        type:
          - string
          - 'null'
        enum:
          - declared
          - available
          - blocked
          - other
    required:
      - fulfillmentItemId
      - quantity
  ReplenishmentReceipt:
    title: ReplenishmentReceipt
    type: object
    properties:
      receiptId:
        type: string
      receivedAt:
        type: string
        format: date-time
      items:
        type: array
        items:
          $ref: '#/schemas/ReplenishmentItem'
  FulfillmentFulfillable:
    description: Fulfillable can be fulfillmentItem or fulfillmentBundle
    type: object
    properties:
      fulfillableId:
        type: string
        format: uuid
      batchQuantity:
        description: quantity in batches
        type: integer
      unitQuantity:
        description: quantity in unit
        type: integer
    required:
      - fulfillableId
      - batchQuantity
      - unitQuantity
  FulfillmentFulfillableResource:
    properties:
      type:
        $ref: '../internal.yaml#/components/schemas/type'
      id:
        $ref: '../internal.yaml#/components/schemas/id'
      attributes:
        $ref: '#/schemas/FulfillmentFulfillable'
      relationships:
        type: object
        properties:
          item:
            type: object
            properties:
              data:
                anyOf:
                  - $ref: '../internal.yaml#/components/schemas/relationshipToOne'
                  - type: 'null'
    required:
      - type
      - id
      - attributes
  WarehouseResource:
    properties:
      type:
        $ref: '../internal.yaml#/components/schemas/type'
      id:
        $ref: '../internal.yaml#/components/schemas/id'
      attributes:
        $ref: '#/schemas/Warehouse'
    required:
      - type
      - id
      - attributes
    examples:
      - type: string
        id: string
        attributes:
          code: string
          name: string
          street: string
          postalCode: string
          city: string
          countryCode: string
          email: string
          phone: string
  Warehouse:
    title: FulfillmentItem
    type: object
    properties:
      code:
        type: string
      name:
        type: string
      street:
        type: string
      postalCode:
        type: string
      city:
        type: string
      countryCode:
        type: string
        pattern: '^[A-Z]{2}$'
      email:
        type: string
      phone:
        type: string
    required:
      - code
      - street
      - postalCode
      - city
      - countryCode
  FulfillmentItemResource:
    properties:
      type:
        $ref: '../internal.yaml#/components/schemas/type'
      id:
        $ref: '../internal.yaml#/components/schemas/id'
      attributes:
        $ref: '#/schemas/FulfillmentItem'
      relationships:
        type: object
        properties:
          fulfillmentBrand:
            type: object
            properties:
              data:
                $ref: '../internal.yaml#/components/schemas/relationshipToOne'
          quantityAdjustments:
            type: object
            description: (deprecated) Use Quantity Adjustments API instead
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    id:
                      type: string
                      format: uuid
                  required:
                    - type
                    - id
            required:
              - data
    required:
      - type
      - id
      - attributes
  FulfillmentQuantityAdjustmentResource:
    properties:
      type:
        $ref: '../internal.yaml#/components/schemas/type'
      id:
        $ref: '../internal.yaml#/components/schemas/id'
      attributes:
        $ref: '#/schemas/FulfillmentQuantityAdjustment'
  FulfillmentQuantityAdjustmentRelationshipResource:
    properties:
      type:
        $ref: '../internal.yaml#/components/schemas/type'
      id:
        $ref: '../internal.yaml#/components/schemas/id'
  FulfillmentItemBase:
    title: FulfillmentItem
    type: object
    properties:
      productVariantId:
        type:
          - integer
      barcode:
        type: string
        pattern: '^\d{13,14}$'
      unitsPerBatch:
        type: integer
      unitCostMargin:
        type: number
        format: float
        deprecated: true
      unitCost:
        type: number
        format: float
      sku:
        type: string
      productName:
        type: string
      categoryName:
        type: string
      classificationCode:
        type: string
      expiryTracked:
        type: boolean
      shelfLife:
        type:
          - integer
          - 'null'
      batchTracked:
        type: boolean
      availableQuantity:
        type: integer
      quantityAdjustments:
        type: array
        items:
          $ref: '#/schemas/FulfillmentQuantityAdjustment'
    required:
      - availableQuantity
      - barcode
      - unitsPerBatch
      - unitCostMargin
  FulfillmentItem:
    allOf:
      - $ref: '#/schemas/FulfillmentItemBase'
      - type: object
        properties:
          status:
            type: string
            enum:
              - created
              - pending
              - synced
          expectedStockForDays:
            type:
              - integer
              - 'null'
            description: 'How many days stock is expected to last, based on historical data.  Null if insufficient data available to create an estimate'
          stockStatus:
            type: string
            enum:
              - in_stock
              - soon_out_of_stock
              - out_of_stock
              - never_replenished
  FulfillmentQuantityAdjustment:
    type: object
    properties:
      fulfillmentItemId:
        type: string
        format: uuid
      previousQuantity:
        type: integer
      newQuantity:
        type: integer
      reasonCode:
        type: string
        enum:
          - ORDER_CREATED
          - ORDER_CANCELLED
          - REPLENISHMENT
          - SNAPSHOT
          - MANUAL
          - BROKEN
          - LOST
          - FOUND
          - DESTROYED
          - REPLENISHMENT_MISMATCH
          - DELIVERY_REFUSED
          - RETURNED_TO_BRAND
          - ADJUSTMENT_REVERSED
          - QUALITY_CONTROL
          - EXPIRED
          - BRAND_REQUEST
          - BLOCKED_BY_PROVIDER
          - UNBLOCKED
          - BATCHED
          - UNBATCHED
          - RETURNED
          - BATCH_MODIFIED
          - EXPIRY_DATE_MODIFIED
          - ''
      reasonText:
        type: [ 'string', 'null' ]
      createdAt:
        type: string
        format: date-time
      metadata:
        type: array
        description: 'Set of information related to the quantity adjustment action'
        items:
          anyOf:
            - $ref: '#/schemas/FulfillmentQuantityOrderAdjustment'
            - $ref: '#/schemas/FulfillmentQuantityAdjustmentWebhookContext'
            - $ref: '#/schemas/FulfillmentQuantityReplenishmentAdjustment'
    required:
      - newQuantity
      - reasonCode
  FulfillmentQuantityOrderAdjustment:
    type: object
    properties:
      order_id:
        type: [ 'integer', 'null' ]
      order_reference_id:
        type: string
      fulfillment_order_uuid:
        type: string
        format: uuid
  FulfillmentQuantityAdjustmentWebhookContext:
    type: object
    properties:
      webhookcall_id:
        type: integer
  FulfillmentQuantityReplenishmentAdjustment:
    type: object
    properties:
      replenishment_uuid:
        type: string
        format: uuid

responses:
  FulfillmentBrandResponse:
    description: Single fulfillment brand
    content:
      application/vnd.api+json:
        schema:
          type: object
          properties:
            data:
              $ref: '#/schemas/FulfillmentBrandResource'
            jsonapi:
              $ref: '../internal.yaml#/components/schemas/jsonapi'
            included:
              type: array
              items:
                anyOf:
                  - $ref: '#/schemas/WarehouseResource'
          required:
            - data
            - jsonapi
  ReplenishmentResponse:
    description: Single replenishment
    content:
      application/vnd.api+json:
        schema:
          type: object
          properties:
            data:
              $ref: '#/schemas/ReplenishmentResource'
            jsonapi:
              $ref: '../internal.yaml#/components/schemas/jsonapi'
            included:
              type: array
              items:
                anyOf:
                  - $ref: '#/schemas/FulfillmentBrandResource'
                  - $ref: '#/schemas/WarehouseResource'
          required:
            - data
            - jsonapi
  FulfillmentFulfillableCollectionResponse:
    description: Set of fulfillment fullfilable
    content:
      application/vnd.api+json:
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/schemas/FulfillmentFulfillableResource'
            jsonapi:
              $ref: '../internal.yaml#/components/schemas/jsonapi'
            included:
              type: array
              items:
                anyOf:
                  - $ref: '#/schemas/FulfillmentItemResource'
          required:
            - data
            - jsonapi
  FulfillmentOrderResponse:
    description: Single fulfillment order
    content:
      application/vnd.api+json:
        schema:
          type: object
          properties:
            data:
              $ref: '#/schemas/FulfillmentOrderResource'
            jsonapi:
              $ref: '../internal.yaml#/components/schemas/jsonapi'
            included:
              type: array
              items:
                anyOf:
                  - $ref: '#/schemas/FulfillmentShipmentResource'
                  - $ref: '#/schemas/FulfillmentOrderStatusUpdateResource'
          required:
            - data
            - jsonapi
  FulfillmentOrdersCollectionResponse:
    description: Set of fulfillment orders
    content:
      application/vnd.api+json:
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/schemas/FulfillmentOrderResource'
            jsonapi:
              $ref: '../internal.yaml#/components/schemas/jsonapi'
            included:
              type: array
              items:
                anyOf:
                  - $ref: '#/schemas/FulfillmentShipmentResource'
                  - $ref: '#/schemas/FulfillmentOrderStatusUpdateResource'
          required:
            - data
            - jsonapi
  ReplenishmentsCollectionResponse:
    description: Set of replenishments
    content:
      application/vnd.api+json:
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/schemas/ReplenishmentResource'
            jsonapi:
              $ref: '../internal.yaml#/components/schemas/jsonapi'
          required:
            - data
            - jsonapi
  WarehouseResponse:
    description: Single warehouse
    content:
      application/vnd.api+json:
        schema:
          type: object
          properties:
            data:
              $ref: '#/schemas/WarehouseResource'
            jsonapi:
              $ref: '../internal.yaml#/components/schemas/jsonapi'
          required:
            - data
            - jsonapi
  FulfillmentQuantityAdjustmentRelationshipResponse:
    description: Set of fulfillment quantity adjustments id and links
    content:
      application/vnd.api+json:
        schema:
          type: object
          properties:
            data:
              $ref: '../internal.yaml#/components/schemas/relationshipToMany'
            jsonapi:
              $ref: '../internal.yaml#/components/schemas/jsonapi'
          required:
            - data
            - jsonapi
  FulfillmentQuantityAdjustmentCollectionResponse:
    description: Set of fulfillment quantity adjustments
    content:
      application/vnd.api+json:
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/schemas/FulfillmentQuantityAdjustmentResource'
            jsonapi:
              $ref: '../internal.yaml#/components/schemas/jsonapi'
          required:
            - data
            - jsonapi
  WarehousesCollectionResponse:
    description: Set of warehouses
    content:
      application/vnd.api+json:
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/schemas/WarehouseResource'
            jsonapi:
              $ref: '../internal.yaml#/components/schemas/jsonapi'
          required:
            - data
            - jsonapi
  FulfillmentItemResponse:
    description: Single fulfillment item
    content:
      application/vnd.api+json:
        schema:
          type: object
          properties:
            data:
              $ref: '#/schemas/FulfillmentItemResource'
            jsonapi:
              $ref: '../internal.yaml#/components/schemas/jsonapi'
            included:
              type: array
              items:
                anyOf:
                  - $ref: '#/schemas/FulfillmentQuantityAdjustmentResource'
                  - $ref: '#/schemas/FulfillmentBrandResource'
          required:
            - data
            - jsonapi
  FulfillmentItemsCollectionResponse:
    description: Set of fulfillment items
    content:
      application/vnd.api+json:
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/schemas/FulfillmentItemResource'
            jsonapi:
              $ref: '../internal.yaml#/components/schemas/jsonapi'
            included:
              type: array
              items:
                anyOf:
                  - $ref: '#/schemas/FulfillmentQuantityAdjustmentResource'
                  - $ref: '#/schemas/FulfillmentBrandResource'
          required:
            - data
            - jsonapi
  FulfillmentOrderError:
    description: Fulfillment order creation error response
    content:
      application/vnd.api+json:
        schema:
          type: object
          properties:
            jsonapi:
              $ref: '../internal.yaml#/components/schemas/jsonapi'
            errors:
              type: array
              items:
                type: object
                properties:
                  detail:
                    type: string
                    enum:
                      - 'not_a_fulfillment_brand'
                      - 'unavailable_items'
                      - 'already_being_fulfilled'
                      - 'not_available_for_international_orders'
                  status:
                    description: 'The HTTP status code applicable to this problem, expressed as a string value.'
                    type: string
                  title:
                    description: 'General description of the problem'
                    type: string
                  meta:
                    type: object
                    additionalProperties: true
                    properties:
                      - undeclaredItems:
                          type: array
                          items:
                            type: string
                            format: uuid
                      - unavailableItems:
                          type: array
                          items:
                            type: string
                            format: uuid
